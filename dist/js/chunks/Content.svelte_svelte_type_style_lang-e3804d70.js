const _=r=>Math.floor(Math.random()*r);Array.range=function(r){return new Array(r).fill(void 0).map((e,l)=>l)};Array.rectRange=function(r,e){return new Array(r).fill(void 0).map((l,t)=>new Array(e).fill(void 0).map((n,a)=>a*r+t))};Array.prototype.sample=function(){return this[_(this.length)]};Array.prototype.sampleFew=function(r){const e=[...this],l=Math.min(r,e.length);for(let t=0;t<l;t+=1){const n=t+_(e.length-t);if(t===n)continue;const a=e[t];e[t]=e[n],e[n]=a}return e.slice(0,l)};Array.prototype.shuffle=function(){return this.sampleFew(this.length)};Array.prototype.unique=function(){return[...new Set(this)]};export{_ as r};
